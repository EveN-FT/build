{"version":3,"sources":["assets/ticket-icon.png","components/wallet/connectors.ts","hooks/useConnector.tsx","components/WalletConnection.tsx","components/NavBar.tsx","assets/03-ticketdesign.png","routes/Home.tsx","api/index.ts","routes/Explore.tsx","routes/EventCreate.tsx","routes/EventDetail.tsx","routes/EventMint.tsx","routes/TicketList.tsx","routes/ViewFinder.tsx","routes/Redeem.tsx","routes/UserTickets.tsx","components/UserRedeem.tsx","routes/Host.tsx","App.tsx","reportWebVitals.js","redux/blockchainSlice.ts","redux/store.ts","index.tsx"],"names":["RPC_URLS","process","injected","NetworkConnector","urls","defaultChainId","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","infuraId","qrcode","walletlink","WalletLinkConnector","url","appName","uauth","UAuthConnector","clientID","clientSecret","redirectUri","fallbackIssuer","scope","connectors","ConnectorContext","React","createContext","ConnectorProvider","children","useWeb3React","activate","account","library","active","connector","deactivate","useState","isActive","setIsActive","isLoading","setIsLoading","useEffect","connect","then","handleIsActive","useCallback","a","console","log","createConnectHandler","connectorId","selectedConnector","walletConnectProvider","wc","uri","undefined","error","disconnect","values","useMemo","Provider","value","useConnector","context","useContext","Error","WalletConnection","openModal","setOpenModal","useLocation","pathname","to","onClick","className","Object","keys","map","v","id","NavBar","src","ticketIcon","alt","Home","ticketDesign","instance","axios","create","baseURL","headers","responseType","get","post","data","config","backOff","catch","err","response","status","res","retry","message","jitter","api","Explore","events","setEvents","eventData","setEventData","apiCall","loadData","Promise","all","eventContract","loadContract","address","event","contract","ethers","Contract","EventABI","name","owner","metadata","metadataUri","startsWith","split","pop","imageUri","image","ORIGINAL","description","attributes","venue","find","element","key","city","time","imageUrl","length","filter","BC","EventCreate","setImage","navigate","useNavigate","title","setTitle","setDescription","setVenue","setCity","Date","toISOString","datetime","setDatetime","signer","getSigner","handleSubmit","deployEvent","ContractFactory","getAddress","addr","deploy","ownerAddress","preventDefault","imageData","Image","imageType","fileReader","FileReader","onload","getImageBlob","fetch","blob","result","imageBlob","type","readAsDataURL","client","add","imageCid","cid","meta","width","height","JSON","stringify","metadataCid","onImageChange","target","files","onSubmit","htmlFor","placeholder","autoFocus","maxLength","onChange","e","rows","accept","EventDetail","setEvent","useParams","EventMint","eventAddress","setType","desc","setDesc","amount","setAmount","price","setPrice","mintTickets","contractShape","TicketABI","mint","parseInt","wait","ids","i","push","args","tokenId","toNumber","ticketIds","tickets","amountRemaining","TicketList","ticket","toFixed","disabled","ViewFinder","viewBox","style","top","left","zIndex","boxSizing","border","position","fill","d","stroke","strokeWidth","Redeem","setData","redeemed","setRedeemed","Boolean","valid","setValid","videoId","scanDelay","constraints","facingMode","abi","verify","qrInfo","parse","verified","utils","verifyTypedData","domain","types","signedMessage","ownerOf","ID","redeemTicket","Owner","ticketId","margin","onResult","getText","info","UserTickets","chainId","setTickets","getNFTBalances","useNFTBalances","load","params","chain","token_addresses","balance","token","token_id","imgUri","Fragment","UserRedeem","qr","setQr","ticketContract","sign","version","verifyingContract","Event","Ticket","eventName","Name","Address","_signTypedData","size","includeMargin","Host","marginLeft","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","blockchainSlice","createSlice","initialState","loading","errorMsg","reducers","connectRequest","state","connectSuccess","action","payload","smartContract","connectFailed","updateAccount","actions","store","configureStore","reducer","blockchain","blockchainReducer","ReactDOM","render","getLibrary","provider","Web3Provider","pollingInterval","appId","serverUrl","document","getElementById"],"mappings":"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","file":"static/js/main.a4f08ddc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ticket-icon.97c26ae2.png\";","import type { AbstractConnector } from '@web3-react/abstract-connector'\nimport { InjectedConnector } from '@web3-react/injected-connector';\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\nimport { WalletLinkConnector } from '@web3-react/walletlink-connector';\nimport { UAuthConnector } from '@uauth/web3-react'\nimport { NetworkConnector } from '@web3-react/network-connector'\n\nconst POLLING_INTERVAL = 12000;\nconst RPC_URLS = {\n\t1: `https://mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_ID!}`,\n\t4: `https://rinkeby.infura.io/v3/${process.env.REACT_APP_INFURA_ID!}`,\n\t137: `https://polygon-mainnet.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n\t80001: `https://polygon-mumbai.infura.io/v3/${process.env.REACT_APP_INFURA_ID}`,\n};\n\nexport const network = new NetworkConnector({\n  urls: { 1: RPC_URLS[1], 4: RPC_URLS[4], 137: RPC_URLS[137] },\n  defaultChainId: 1,\n});\n\n//metamask\nexport const injected = new InjectedConnector({\n\tsupportedChainIds: [1, 4, 137, 80001]\n});\n\n//TODO: fix walletconnect bc it aint working\n//wallet connect: trust, rainbow, etc\nexport const walletconnect = new WalletConnectConnector({\n  infuraId: process.env.REACT_APP_INFURA_ID!,\n  qrcode: true,\n});\n// export const walletconnect = new WalletConnectConnector({\n// \trpc: {\n// \t\t1: RPC_URLS[1],\n// \t\t4: RPC_URLS[4],\n// \t\t137: RPC_URLS[137],\n// \t},\n// \tinfuraId: process.env.REACT_APP_INFURA_ID!,\n//     bridge: \"https://bridge.walletconnect.org\",\n// \tqrcode: true,\n// \t// pollingInterval: POLLING_INTERVAL\n// });\n\nexport function resetWalletConnector(connector: WalletConnectConnector) {\n  console.info(connector);\n  if (connector && connector instanceof WalletConnectConnector) {\n    connector.walletConnectProvider = undefined;\n  }\n}\n\n//coinbase wallet\nexport const walletlink = new WalletLinkConnector({\n\n  url: RPC_URLS[137],\n  appName: \"Tiny Tix\",\n\n});\n\n//unstoppable domains\nexport const uauth = new UAuthConnector({\n  clientID: process.env.REACT_APP_CLIENT_ID!,\n  clientSecret: process.env.REACT_APP_CLIENT_SECRET!,\n  redirectUri: process.env.REACT_APP_REDIRECT_URI!,\n  // postLogoutRedirectUri: process.env.REACT_APP_POST_LOGOUT_REDIRECT_URI!,\n  fallbackIssuer: process.env.REACT_APP_FALLBACK_ISSUER!,\n  scope: \"openid wallet\",\n  connectors: { injected, walletconnect },\n});\n\n//array of all connectors\nconst connectors: Record<string, AbstractConnector> = {\n  injected,\n  // walletconnect,\n  walletlink,\n  uauth,\n};\n\nexport default connectors;\n","import React, {\n  useState,\n  useEffect,\n  useMemo,\n  useCallback,\n  Props,\n  MouseEventHandler,\n} from \"react\";\nimport {\n  injected,\n  walletconnect,\n  resetWalletConnector,\n  walletlink,\n  network,\n} from \"../components/wallet/connectors\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport connectors from \"../components/wallet/connectors\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport { AbstractConnector } from \"@web3-react/abstract-connector\";\n\ninterface Store {\n  isActive: boolean;\n  isLoading: boolean;\n  account: string | null | undefined;\n  connect: () => Promise<void>;\n  disconnect: () => Promise<void>;\n  createConnectHandler: (connectorId: string) => Promise<void>;\n  library: any;\n}\n\nexport const ConnectorContext = React.createContext<Store>({} as Store);\n\nexport const ConnectorProvider = ({ children }: Props<any>) => {\n  const { activate, account, library, connector, active, deactivate } =\n    useWeb3React();\n\n  const [isActive, setIsActive] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Init Loading\n  useEffect(() => {\n    connect().then(() => {\n      //TODO change this to new createConnectHandler function or just remove it\n      setIsLoading(false);\n    });\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleIsActive = useCallback(() => {\n    setIsActive(active);\n  }, [active]);\n\n  useEffect(() => {\n    handleIsActive();\n  }, [handleIsActive]);\n\n  //Connect to Connector wallet\n  const connect = async () => {\n    console.log(\"Connecting to Connector Wallet\");\n    try {\n      await activate(injected);\n    } catch (error) {\n      console.log(\"Error on connecting: \", error);\n    }\n  };\n  //NEW connect to Connector wallet\n  const createConnectHandler = async (connectorId: string) => {\n    try {\n      const selectedConnector = connectors[connectorId];\n      if (\n        selectedConnector instanceof WalletConnectConnector &&\n        selectedConnector.walletConnectProvider?.wc?.uri\n      ) {\n        selectedConnector.walletConnectProvider = undefined;\n      }\n      await activate(selectedConnector);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  // Disconnect from wallet\n  const disconnect = async () => {\n    console.log(\"Deactivating...\");\n    try {\n      deactivate();\n    } catch (error) {\n      console.log(\"Error on disconnecting: \", error);\n    }\n  };\n\n  const values = useMemo(\n    () => ({\n      isActive,\n      account,\n      isLoading,\n      connect,\n      createConnectHandler,\n      disconnect,\n      library,\n    }),\n    [isActive, isLoading] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  return (\n    <ConnectorContext.Provider value={values}>\n      {children}\n    </ConnectorContext.Provider>\n  );\n};\n\nexport default function useConnector() {\n  const context = React.useContext(ConnectorContext);\n\n  if (context === undefined) {\n    throw new Error(\n      \"useConnector hook must be used with a ConnectorProvider component\"\n    );\n  }\n\n  return context;\n}\n","import { useState } from \"react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { WalletConnectConnector } from \"@web3-react/walletconnect-connector\";\nimport connectors from \"./wallet/connectors\";\nimport \"../styles/navbar.scss\";\nimport \"../styles/wallet-modal.scss\";\nimport useConnector from \"../hooks/useConnector\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nconst WalletConnection = () => {\n  const [openModal, setOpenModal] = useState(false);\n  const { isActive, account, disconnect, createConnectHandler } =\n    useConnector();\n  const location = useLocation();\n\n  // function createConnectHandler(connectorId: string) {\n  //   return async () => {\n  //     try {\n  //       const connector = connectors[connectorId];\n  //       if (\n  //         connector instanceof WalletConnectConnector &&\n  //         connector.walletConnectProvider?.wc?.uri\n  //       ) {\n  //         connector.walletConnectProvider = undefined;\n  //       }\n  //       await activate(connector);\n  //     } catch (error) {\n  //       console.error(error);\n  //     }\n  //   };\n  // }\n\n  if (location.pathname === \"/wallet\") {\n    return null;\n  }\n\n  if (isActive) {\n    //TODO: remove button and add icon for 'view wallet'\n    return (\n      <>\n        <Link to={`/wallet`}>\n          <button>View wallet</button>\n        </Link>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <button onClick={() => setOpenModal(true)}>Connect</button>\n      {openModal && (\n        <div className=\"wallet-modal\" onClick={() => setOpenModal(false)}>\n          <div className=\"close\" onClick={() => setOpenModal(false)}></div>\n          <div className=\"button-grid\">\n            {Object.keys(connectors).map((v) => (\n              <button\n                key={v}\n                onClick={() => createConnectHandler(v)}\n                className=\"wallet-icon\"\n                id={v}\n              >\n                Connect to {v}\n              </button>\n            ))}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default WalletConnection;\n","import ticketIcon from \"../assets/ticket-icon.png\";\nimport { Link } from \"react-router-dom\";\nimport WalletConnection from \"./WalletConnection\";\nimport \"../styles/navbar.scss\";\nimport \"../styles/wallet-modal.scss\";\n\nconst NavBar = () => {\n  return (\n    <>\n      <div className=\"navbar\">\n        <ul>\n          <li>\n            <Link to=\"/\">\n              <img src={ticketIcon} alt=\"Ticket icon\" className=\"icon\" />\n            </Link>\n          </li>\n          <li>\n            <WalletConnection />\n          </li>\n        </ul>\n      </div>\n    </>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/03-ticketdesign.6e04b90f.png\";","import { Link } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\n\nimport ticketDesign from \"../assets/03-ticketdesign.png\";\nimport \"../styles/home.scss\";\n\nconst Home = () => {\n  return (\n    <>\n      {/* <img className=\"background\" src={background} alt=\"\" /> */}\n      <NavBar />\n      <main className=\"home\">\n        <div className=\"hero\">\n          <div className=\"half\">\n            <h1>\n              Tickets\n              <br />\n              on the\n              <br />\n              Blockchain\n            </h1>\n            <img src={ticketDesign} alt=\"Ticket design\" />\n          </div>\n        </div>\n        <div className=\"home__cta\">\n          <Link to=\"/explore\">\n            <button>Get your tickets →</button>\n          </Link>\n          <Link to=\"/host\" className=\"btn-inverse\">\n            Host events →\n          </Link>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default Home;\n","import axios, { AxiosRequestConfig, AxiosResponse } from \"axios\";\nimport { backOff } from \"exponential-backoff\";\n\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: { \"Content-Type\": \"application/json\" },\n  responseType: \"json\",\n});\n\nconst get = instance.get;\n\nconst post = async <T = any>(\n  url: string,\n  data?: any,\n  config?: AxiosRequestConfig\n): Promise<AxiosResponse> => {\n  return backOff(\n    async () => {\n      const res = await instance\n        .post<T, AxiosResponse>(url, data, config)\n        .catch(async (err) => {\n          if (err.response) {\n            // invalid auth\n            if (err.response.status === 401) {\n              // try silent refresh once in case token expire\n              return instance.post<T, AxiosResponse>(url, data, config);\n            }\n            // rate limited\n            if (err.response.status === 429) {\n              throw new Error(\"retry\");\n            }\n          }\n          throw err;\n        });\n      return res;\n    },\n    {\n      retry: (err: any) => {\n        return err.message === \"retry\";\n      },\n      jitter: \"full\",\n    }\n  );\n};\n\nconst api = { post, get };\n\nexport default api;\n","import { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport axios from \"axios\";\nimport useConnector from \"../hooks/useConnector\";\n\nimport EventABI from \"../assets/EventABI.json\";\nimport \"../styles/explore.scss\";\nimport api from \"../api\";\n\nexport type Event = {\n  address: string;\n  name: string;\n  description?: string;\n  owner?: string;\n  metadata?: string;\n  imageUrl?: string;\n  venue?: string;\n  city?: string;\n  time?: string;\n};\n\nexport type EventDetail = {\n  address: string;\n  id: number;\n  ownerAddress: string;\n};\n\nconst Explore = () => {\n  const { library } = useConnector();\n  const [events, setEvents] = useState<(Event | null)[]>([]);\n  const [eventData, setEventData] = useState<EventDetail[]>([]);\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const { data } = await api.post(\"/event/list\", {});\n      setEventData(data.events);\n    };\n    apiCall();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const loadData = async () => {\n      setEvents(\n        await Promise.all(\n          eventData.map(async (eventContract) => {\n            const event: Event | null = await loadContract(\n              eventContract.address\n            );\n\n            return event;\n          })\n        )\n      );\n    };\n\n    loadData();\n  }, [eventData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadContract = async (address: string): Promise<Event | null> => {\n    const contract = new ethers.Contract(address, EventABI, library);\n    const name = await contract.name();\n    const owner = await contract.owner();\n    const metadata = await contract.metadata();\n    var metadataUri = metadata;\n\n    if (metadata.startsWith(\"ipfs://\")) {\n      metadataUri = `https://ipfs.io/ipfs/${metadata.split(\"/\").pop()}`;\n    }\n\n    try {\n      const { data } = await axios.get(metadataUri);\n      var imageUri = data.image.url.ORIGINAL;\n\n      if (imageUri.startsWith(\"ipfs://\")) {\n        imageUri = `https://ipfs.io/ipfs/${imageUri.split(\"/\").pop()}`;\n      }\n\n      const description = data.description;\n      const attributes = data.attributes;\n      const venue = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/venue\"\n      ).value;\n      const city = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/city\"\n      ).value;\n      const time = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/time\"\n      ).value;\n\n      return {\n        address: address,\n        name: name,\n        description: description,\n        owner: owner,\n        metadata: metadata,\n        imageUrl: imageUri,\n        venue: venue,\n        city: city,\n        time: time,\n      };\n    } catch (error) {\n      return null;\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      <main className=\"explore\">\n        <h1>Upcoming events</h1>\n        {events.length < 1 ? (\n          <p>Loading events...</p>\n        ) : (\n          events\n            .filter((event) => event !== null)\n            .map((event, key) => {\n              return (\n                <Link to={`/event/${event!.address}`} key={key}>\n                  <div className=\"event-hero\">\n                    <div className=\"event-description\">\n                      <h1>{event!.name}</h1>\n                      <p className=\"description\">{event!.description}</p>\n                      <Link to={`/event/${event!.address}/tickets`}>\n                        <button>Buy Tickets</button>\n                      </Link>\n                    </div>\n                    <img src={event!.imageUrl} alt={event!.name} />\n                  </div>\n                </Link>\n              );\n            })\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default Explore;\n","import { useNavigate } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport { create } from \"ipfs-http-client\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport EventABI from \"../assets/EventABI.json\";\n\nimport \"../styles/event-create.scss\";\nimport axios from \"axios\";\n\nconst BC =\n  \"60806040523480156200001157600080fd5b5060405162000a7a38038062000a7a833981810160405281019062000037919062000365565b81600090805190602001906200004f929190620000b3565b5082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060029080519060200190620000a9929190620000b3565b5050505062000464565b828054620000c1906200042e565b90600052602060002090601f016020900481019282620000e5576000855562000131565b82601f106200010057805160ff191683800117855562000131565b8280016001018555821562000131579182015b828111156200013057825182559160200191906001019062000113565b5b50905062000140919062000144565b5090565b5b808211156200015f57600081600090555060010162000145565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001a48262000177565b9050919050565b620001b68162000197565b8114620001c257600080fd5b50565b600081519050620001d681620001ab565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200023182620001e6565b810181811067ffffffffffffffff82111715620002535762000252620001f7565b5b80604052505050565b60006200026862000163565b905062000276828262000226565b919050565b600067ffffffffffffffff821115620002995762000298620001f7565b5b620002a482620001e6565b9050602081019050919050565b60005b83811015620002d1578082015181840152602081019050620002b4565b83811115620002e1576000848401525b50505050565b6000620002fe620002f8846200027b565b6200025c565b9050828152602081018484840111156200031d576200031c620001e1565b5b6200032a848285620002b1565b509392505050565b600082601f8301126200034a5762000349620001dc565b5b81516200035c848260208601620002e7565b91505092915050565b6000806000606084860312156200038157620003806200016d565b5b60006200039186828701620001c5565b935050602084015167ffffffffffffffff811115620003b557620003b462000172565b5b620003c38682870162000332565b925050604084015167ffffffffffffffff811115620003e757620003e662000172565b5b620003f58682870162000332565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200044757607f821691505b602082108114156200045e576200045d620003ff565b5b50919050565b61060680620004746000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806306fdde0314610051578063392f37e91461006f5780638da5cb5b1461008d578063a49a1e7d146100ab575b600080fd5b6100596100c7565b604051610066919061035f565b60405180910390f35b610077610155565b604051610084919061035f565b60405180910390f35b6100956101e3565b6040516100a291906103c2565b60405180910390f35b6100c560048036038101906100c09190610526565b610209565b005b600080546100d49061059e565b80601f01602080910402602001604051908101604052809291908181526020018280546101009061059e565b801561014d5780601f106101225761010080835404028352916020019161014d565b820191906000526020600020905b81548152906001019060200180831161013057829003601f168201915b505050505081565b600280546101629061059e565b80601f016020809104026020016040519081016040528092919081815260200182805461018e9061059e565b80156101db5780601f106101b0576101008083540402835291602001916101db565b820191906000526020600020905b8154815290600101906020018083116101be57829003601f168201915b505050505081565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b806002908051906020019061021f929190610223565b5050565b82805461022f9061059e565b90600052602060002090601f0160209004810192826102515760008555610298565b82601f1061026a57805160ff1916838001178555610298565b82800160010185558215610298579182015b8281111561029757825182559160200191906001019061027c565b5b5090506102a591906102a9565b5090565b5b808211156102c25760008160009055506001016102aa565b5090565b600081519050919050565b600082825260208201905092915050565b60005b838110156103005780820151818401526020810190506102e5565b8381111561030f576000848401525b50505050565b6000601f19601f8301169050919050565b6000610331826102c6565b61033b81856102d1565b935061034b8185602086016102e2565b61035481610315565b840191505092915050565b600060208201905081810360008301526103798184610326565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103ac82610381565b9050919050565b6103bc816103a1565b82525050565b60006020820190506103d760008301846103b3565b92915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61043382610315565b810181811067ffffffffffffffff82111715610452576104516103fb565b5b80604052505050565b60006104656103dd565b9050610471828261042a565b919050565b600067ffffffffffffffff821115610491576104906103fb565b5b61049a82610315565b9050602081019050919050565b82818337600083830152505050565b60006104c96104c484610476565b61045b565b9050828152602081018484840111156104e5576104e46103f6565b5b6104f08482856104a7565b509392505050565b600082601f83011261050d5761050c6103f1565b5b813561051d8482602086016104b6565b91505092915050565b60006020828403121561053c5761053b6103e7565b5b600082013567ffffffffffffffff81111561055a576105596103ec565b5b610566848285016104f8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806105b657607f821691505b602082108114156105ca576105c961056f565b5b5091905056fea26469706673582212207ae9fe1131749aff7b2469a4075a90d7cd5264af71f612bc5bdaf4f2c48e324164736f6c634300080c0033\";\n\nconst EventCreate = () => {\n  const [image, setImage] = useState<FileList | null>(null);\n  const navigate = useNavigate();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [venue, setVenue] = useState(\"\");\n  const [city, setCity] = useState(\"\");\n  const [datetime, setDatetime] = useState(new Date().toISOString());\n\n  // const provider = new ethers.providers.Web3Provider(window.ethereum);\n  const { library } = useWeb3React();\n  const signer = library.getSigner();\n\n  const handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    // ipfs upload\n    if (image === null) {\n      // handle no image here\n      console.log(\"no image\");\n      return;\n    }\n\n    // Read the file uploaded to get image dimensions and type\n    var imageData = new Image();\n    var imageType = \"\";\n    var fileReader = new FileReader();\n\n    fileReader.onload = async () => {\n      imageData.src = fileReader.result as string;\n\n      async function getImageBlob(imageUrl: string) {\n        const response = await fetch(imageUrl);\n        return response.blob();\n      }\n\n      const imageBlob = await getImageBlob(fileReader.result as string);\n      imageType = imageBlob.type;\n    };\n    fileReader.readAsDataURL(image[0]);\n\n    const client = create({ url: \"https://ipfs.infura.io:5001\" });\n    const { cid: imageCid } = await client.add(image![0]);\n\n    // ipfs hash for metadata\n    const metadata = {\n      name: title,\n      description: description,\n      attributes: [\n        {\n          key: \"/venue\",\n          value: venue,\n        },\n        {\n          key: \"/city\",\n          value: city,\n        },\n        {\n          key: \"/time\",\n          value: datetime,\n        },\n      ],\n      image: {\n        url: {\n          ORIGINAL: `ipfs://ipfs/${imageCid}`,\n        },\n        meta: {\n          ORIGINAL: {\n            type: imageType,\n            width: imageData.width,\n            height: imageData.height,\n          },\n        },\n      },\n    };\n\n    const { cid: metadataCid } = await client.add(JSON.stringify(metadata));\n    // this is for u @jay\n    const metadataUri = `ipfs://ipfs/${metadataCid}`;\n\n    async function deployEvent() {\n      // needs to be locally compiled bytecode for some reason\n      var event = new ethers.ContractFactory(EventABI, BC, signer);\n      var addr = await signer.getAddress();\n      var res = await event.deploy(addr, title, metadataUri);\n      await axios.post(\n        \"https://beta-even-ft-backend.onrender.com/api/v1/event/create\",\n        { address: res.address, ownerAddress: addr }\n      );\n      navigate(-1);\n    }\n    deployEvent();\n  };\n\n  const onImageChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files) {\n      return;\n    }\n\n    setImage(event.target.files);\n  };\n\n  return (\n    <main className=\"create-event\">\n      <span className=\"close\" onClick={() => navigate(-1)}></span>\n      <h1>Create</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          type=\"text\"\n          id=\"title\"\n          name=\"title\"\n          placeholder=\"Event Title\"\n          autoFocus\n          maxLength={40}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Event Description\"\n          rows={4}\n          maxLength={280}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <label htmlFor=\"venue\">Venue</label>\n        <input\n          type=\"text\"\n          id=\"venue\"\n          name=\"venue\"\n          placeholder=\"Venue\"\n          maxLength={40}\n          onChange={(e) => setVenue(e.target.value)}\n        />\n        <label htmlFor=\"city\">City</label>\n        <input\n          type=\"text\"\n          id=\"city\"\n          name=\"city\"\n          placeholder=\"City\"\n          maxLength={40}\n          onChange={(e) => setCity(e.target.value)}\n        />\n        <label htmlFor=\"datetime\">Date & Time</label>\n        <input\n          type=\"datetime-local\"\n          id=\"datetime\"\n          name=\"datetime\"\n          onChange={(e) => setDatetime(e.target.value)}\n        />\n        <label htmlFor=\"image\" className=\"label-show\">\n          Event Image\n        </label>\n        <input\n          type=\"file\"\n          id=\"image\"\n          name=\"image\"\n          maxLength={40}\n          accept=\".png,.jpg,.jpeg\"\n          title=\"Upload event image\"\n          onChange={onImageChange}\n        />\n        <button type=\"submit\">Create</button>\n      </form>\n    </main>\n  );\n};\n\nexport default EventCreate;\n","import { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport useConnector from \"../hooks/useConnector\";\n\nimport NavBar from \"../components/NavBar\";\nimport { Event } from \"./Explore\";\n\nimport EventABI from \"../assets/EventABI.json\";\nimport \"../styles/event-detail.scss\";\n\nconst EventDetail = () => {\n  const [event, setEvent] = useState<Event | null>(null);\n  const { library } = useWeb3React();\n  const { isActive: active } = useConnector();\n  const { address } = useParams();\n\n  useEffect(() => {\n    const apiCall = async () => {\n      setEvent((await loadContract(address!))!);\n    };\n    apiCall();\n  }, [active]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadContract = async (address: string): Promise<Event | null> => {\n    try {\n      const contract = new ethers.Contract(address, EventABI, library);\n      const name = await contract.name();\n      const owner = await contract.owner();\n      const metadata = await contract.metadata();\n      var metadataUri = metadata;\n\n      if (metadata.startsWith(\"ipfs://\")) {\n        metadataUri = `https://ipfs.io/ipfs/${metadata.split(\"/\").pop()}`;\n      }\n\n      const { data } = await axios.get(metadataUri);\n      var imageUri = data.image.url.ORIGINAL;\n\n      if (imageUri.startsWith(\"ipfs://\")) {\n        imageUri = `https://ipfs.io/ipfs/${imageUri.split(\"/\").pop()}`;\n      }\n\n      const description = data.description;\n      const attributes = data.attributes;\n      const venue = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/venue\"\n      ).value;\n      const city = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/city\"\n      ).value;\n      const time = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/time\"\n      ).value;\n\n      return {\n        address: address,\n        name: name,\n        description: description,\n        owner: owner,\n        metadata: metadata,\n        imageUrl: imageUri,\n        venue: venue,\n        city: city,\n        time: time,\n      };\n    } catch (error) {\n      console.log(error);\n      return null;\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      <main className=\"event-detail\">\n        {event === null ? (\n          <p>Loading event data...</p>\n        ) : (\n          <>\n            <div>\n              <h1 className=\"title\">{event.name}</h1>\n              <p className=\"description\">{event.description}</p>\n              <table>\n                <tbody>\n                  <tr>\n                    <th>Date</th>\n                    <td>{event.time}</td>\n                  </tr>\n                  <tr>\n                    <th>Venue</th>\n                    <td>{event.venue}</td>\n                  </tr>\n                  <tr>\n                    <th>City</th>\n                    <td>{event.city}</td>\n                  </tr>\n                </tbody>\n              </table>\n              <Link to={`/event/${address}/tickets`}>\n                <button>Buy Tickets</button>\n              </Link>\n            </div>\n            <img src={event.imageUrl} alt={event.name} />\n          </>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default EventDetail;\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport { create, CID } from \"ipfs-http-client\";\nimport TicketABI from \"../assets/TicketABI.json\";\n\nimport \"../styles/mint-tickets.scss\";\nimport { ethers } from \"ethers\";\nimport { useWeb3React } from \"@web3-react/core\";\n\nexport const tickets = [\n  {\n    type: \"General Admission\",\n    price: 15.0,\n    amountRemaining: 0,\n  },\n  {\n    type: \"General Admission 2\",\n    price: 17.0,\n    amountRemaining: 150,\n  },\n  {\n    type: \"VIP\",\n    price: 35.0,\n    amountRemaining: 30,\n  },\n  {\n    type: \"Backstage Pass\",\n    price: 150.0,\n    amountRemaining: 3,\n  },\n];\n\nconst EventMint = () => {\n  const { address: eventAddress } = useParams();\n  const navigate = useNavigate();\n  const [type, setType] = useState(\"\");\n  const [desc, setDesc] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [image, setImage] = useState<FileList | null>(null);\n  const { library } = useWeb3React();\n\n  const onImageChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (!event.target.files) {\n      return;\n    }\n\n    setImage(event.target.files);\n  };\n\n  const handleSubmit = async (event: React.SyntheticEvent) => {\n    event.preventDefault();\n\n    // ipfs upload\n    if (image === null) {\n      // handle no image here\n      console.log(\"no image\");\n      return;\n    }\n\n    // Read the file uploaded to get image dimensions and type\n    var imageData = new Image();\n    var imageType = \"\";\n    var fileReader = new FileReader();\n\n    fileReader.onload = async () => {\n      imageData.src = fileReader.result as string;\n\n      async function getImageBlob(imageUrl: string) {\n        const response = await fetch(imageUrl);\n        return response.blob();\n      }\n\n      const imageBlob = await getImageBlob(fileReader.result as string);\n      imageType = imageBlob.type;\n    };\n    fileReader.readAsDataURL(image[0]);\n\n    const client = create({ url: \"https://ipfs.infura.io:5001\" });\n    const { cid: imageCid } = await client.add(image![0]);\n\n    // ipfs hash for metadata\n    const metadata = {\n      name: type,\n      description: desc,\n      eventAddress: eventAddress,\n      image: {\n        url: {\n          ORIGINAL: `ipfs://ipfs/${imageCid}`,\n        },\n        meta: {\n          ORIGINAL: {\n            type: imageType,\n            width: imageData.width,\n            height: imageData.height,\n          },\n        },\n      },\n    };\n\n    const { cid: metadataCid } = await client.add(JSON.stringify(metadata));\n    const metadataUri = `ipfs://ipfs/${metadataCid}`;\n\n    async function mintTickets() {\n      const loadContract = async () => {\n        var addr = await library.getSigner().getAddress();\n        const contractShape = new ethers.Contract(\n          process.env.REACT_APP_TICKET_ADDRESS!,\n          TicketABI,\n          library\n        );\n        var contract = contractShape.connect(library.getSigner());\n        console.log(contract);\n        var res = await contract.mint(\n          eventAddress,\n          metadataUri,\n          parseInt(amount),\n          parseInt(price)\n        );\n        var { events } = await res.wait();\n        var ids = [];\n\n        for (var i = 0; i < events.length; i++) {\n          ids.push(events[i].args.tokenId.toNumber());\n        }\n        await axios.post(\n          \"https://beta-even-ft-backend.onrender.com/api/v1/ticket/create\",\n          { address: addr, ticketIds: ids }\n        );\n      };\n      await loadContract();\n      navigate(-1);\n    }\n    mintTickets();\n  };\n\n  return (\n    <main className=\"mint-tickets\">\n      <span className=\"close\" onClick={() => navigate(-1)}></span>\n      <h1>Mint Tickets</h1>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"type\">Type</label>\n        <input\n          type=\"text\"\n          id=\"type\"\n          name=\"type\"\n          placeholder=\"Ticket Type\"\n          autoFocus\n          maxLength={40}\n          onChange={(e) => setType(e.target.value)}\n        />\n        <label htmlFor=\"description\">Ticket Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          placeholder=\"Ticket Description\"\n          rows={3}\n          maxLength={140}\n          onChange={(e) => setDesc(e.target.value)}\n        />\n        <label htmlFor=\"amount\">Ticket Amount</label>\n        <textarea\n          id=\"amount\"\n          name=\"amount\"\n          placeholder=\"Amount of tickets\"\n          rows={1}\n          maxLength={3}\n          onChange={(e) => setAmount(e.target.value)}\n        />\n        <label htmlFor=\"price\">Price in Gwei</label>\n        <textarea\n          id=\"price\"\n          name=\"price\"\n          placeholder=\"Ticket price in gwei\"\n          rows={1}\n          maxLength={24}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <label htmlFor=\"image\" className=\"label-show\">\n          Ticket Image\n        </label>\n        <input\n          type=\"file\"\n          id=\"image\"\n          name=\"image\"\n          maxLength={40}\n          accept=\".png,.jpg,.jpeg\"\n          title=\"Upload ticket image\"\n          onChange={onImageChange}\n        />\n        <button type=\"submit\">Mint</button>\n      </form>\n    </main>\n  );\n};\n\nexport default EventMint;\n","import { useNavigate } from \"react-router-dom\";\n\nimport \"../styles/ticket-list.scss\";\n\nexport const tickets = [\n  {\n    type: \"General Admission\",\n    price: 15.0,\n    amountRemaining: 0,\n  },\n  {\n    type: \"General Admission 2\",\n    price: 17.0,\n    amountRemaining: 150,\n  },\n  {\n    type: \"VIP\",\n    price: 35.0,\n    amountRemaining: 30,\n  },\n  {\n    type: \"Backstage Pass\",\n    price: 150.0,\n    amountRemaining: 3,\n  },\n];\n\nconst TicketList = () => {\n  const navigate = useNavigate();\n\n  return (\n    <main className=\"ticket-list\">\n      <span className=\"close\" onClick={() => navigate(-1)}></span>\n      {tickets.map((ticket) => {\n        return (\n          <div className=\"ticket-type\">\n            <div>\n              <h3>{ticket.type}</h3>\n              <p className=\"remaining\">{ticket.amountRemaining} remaining</p>\n              <p className=\"price\">${ticket.price.toFixed(2)}</p>\n            </div>\n            <button disabled={ticket.amountRemaining < 1}>Buy</button>\n          </div>\n        );\n      })}\n    </main>\n  );\n};\n\nexport default TicketList;\n","export const ViewFinder = () => (\n  <>\n    <svg\n      width=\"50px\"\n      viewBox=\"0 0 100 100\"\n      style={{\n        top: 0,\n        left: 0,\n        zIndex: 1,\n        boxSizing: 'border-box',\n        border: '50px solid rgba(0, 0, 0, 0.3)',\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n      }}\n    >\n      <path\n        fill=\"none\"\n        d=\"M13,0 L0,0 L0,13\"\n        stroke=\"rgba(255, 0, 0, 0.5)\"\n        strokeWidth=\"5\"\n      />\n      <path\n        fill=\"none\"\n        d=\"M0,87 L0,100 L13,100\"\n        stroke=\"rgba(255, 0, 0, 0.5)\"\n        strokeWidth=\"5\"\n      />\n      <path\n        fill=\"none\"\n        d=\"M87,100 L100,100 L100,87\"\n        stroke=\"rgba(255, 0, 0, 0.5)\"\n        strokeWidth=\"5\"\n      />\n      <path\n        fill=\"none\"\n        d=\"M100,13 L100,0 87,0\"\n        stroke=\"rgba(255, 0, 0, 0.5)\"\n        strokeWidth=\"5\"\n      />\n    </svg>\n  </>\n);","import api from \"../api\";\nimport { useState, useEffect } from \"react\";\nimport { QrReader } from \"react-qr-reader\";\nimport { ViewFinder } from \"./ViewFinder\";\nimport { ethers } from \"ethers\";\nimport abi from \"../assets/TicketABI.json\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { useParams } from \"react-router-dom\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst Redeem = () => {\n  const { library } = useWeb3React();\n  const { address } = useParams();\n  const [data, setData] = useState(\"Hold QR Code Steady and Clear to Scan\");\n  const [redeemed, setRedeemed] = useState(false);\n  const [valid, setValid] = useState(Boolean);\n  const navigate = useNavigate();\n  const args = {\n    ViewFinder,\n    videoId: \"video\",\n    scanDelay: 500,\n    constraints: {\n      facingMode: \"rear\",\n    },\n  };\n\n  var contract = new ethers.Contract(\n    process.env.REACT_APP_TICKET_ADDRESS!,\n    abi,\n    library\n  );\n\n  const verify = async () => {\n    const qrInfo = JSON.parse(data);\n    const verified = ethers.utils.verifyTypedData(\n      qrInfo.domain,\n      qrInfo.types,\n      qrInfo.value,\n      qrInfo.signedMessage\n    );\n    const owner = await contract.ownerOf(qrInfo.value.ID);\n    // // get owneraddres qrInfo.value.ID ownerOf(tokenId)\n    if (verified === owner) {\n      console.log(\"verified\");\n      return true;\n    }\n    return false;\n  };\n\n  useEffect(() => {\n    const redeemTicket = async () => {\n      try {\n        const valid = await verify();\n        setValid(valid);\n        if (valid) {\n          const qrInfo = JSON.parse(data);\n          const res = await api.post(\"/ticket/redeem\", {\n            address: qrInfo.value.Owner,\n            ticketId: parseInt(qrInfo.value.ID),\n          });\n          if (res.status === 200) {\n            setRedeemed(true);\n          }\n        }\n      } catch (e: any) {\n        console.log(`error redeeming: ${e}`);\n        setRedeemed(true);\n        setValid(false);\n      }\n    };\n    redeemTicket();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [data]);\n\n  const styles = {\n    container: {\n      width: \"400px\",\n      margin: \"auto\",\n    },\n  };\n\n  return (\n    <div style={styles.container}>\n      <span className=\"close\" onClick={() => navigate(-1)}></span>\n      <QrReader\n        {...args}\n        onResult={(result, error) => {\n          if (!!result) {\n            setData(result.getText());\n          }\n\n          if (!!error) {\n            console.info(error);\n          }\n        }}\n      />\n      {valid && redeemed && <p>Ticket Redeemed</p>}\n      {!valid && redeemed && <p>Invalid Ticket</p>}\n      {!valid && !redeemed && <p>Scanning Ticket...</p>}\n    </div>\n  );\n};\n\nexport default Redeem;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport NavBar from \"../components/NavBar\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport \"../styles/wallet.scss\";\nimport { Event } from \"../routes/Explore\";\nimport { useNFTBalances } from \"react-moralis\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport type Ticket = {\n  eventAddress?: string;\n  owner: string;\n  tokenUri: string;\n  id: number;\n  event?: Event;\n  type?: string;\n  description?: string;\n  image?: string;\n};\n\nexport type TicketMetadata = {\n  id: string;\n  description: string;\n  image: any;\n  name: string;\n  eventAddress: string;\n};\n\nconst UserTickets = () => {\n  let navigate = useNavigate();\n  const { account, chainId, deactivate } = useWeb3React();\n  const [tickets, setTickets] = useState<TicketMetadata[]>([]);\n  const { getNFTBalances } = useNFTBalances();\n\n  // const testAddr = \"0x67Fd888Da2319f8f8419FD7842e32d5C5E71F528\";\n  useEffect(() => {\n    const load = async () => {\n      if (account && chainId) {\n        const balance = await getNFTBalances({\n          params: {\n            address: account,\n            chain: \"rinkeby\",\n            token_addresses: [process.env.REACT_APP_TICKET_ADDRESS!],\n          },\n        });\n        if (balance) {\n          setTickets(\n            balance\n              .result!.filter((token) => token.metadata)\n              .map((token) => {\n                const metadata = JSON.parse(token.metadata!);\n                return {\n                  id: token.token_id,\n                  name: metadata.name,\n                  image: metadata.image.url.ORIGINAL,\n                  description: metadata.description,\n                  eventAddress: metadata.eventAddress,\n                };\n              })\n          );\n        }\n      }\n    };\n    load();\n  }, [account]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      <NavBar />\n      <main className=\"explore\">\n        <h1>Your tickets</h1>\n        <button\n          className=\"red disconnect\"\n          onClick={() => {\n            deactivate();\n            navigate(\"/\");\n          }}\n        >\n          Disconnect\n        </button>\n        {tickets.length > 0 ? (\n          tickets.map((ticket, key) => {\n            var imgUri = ticket.image;\n\n            if (ticket.image.startsWith(\"ipfs://\")) {\n              imgUri = `https://ipfs.io/ipfs/${ticket.image.split(\"/\").pop()}`;\n            }\n\n            return (\n              <React.Fragment key={key}>\n                <div className=\"event-hero\">\n                  <Link to={`/event/${ticket.eventAddress}`} key={key}>\n                    <div className=\"event-description\">\n                      <h1>{ticket.name}</h1>\n                      <p className=\"description\">{ticket.description}</p>\n                      <Link to={`/user/redeem/${ticket.id}`}>\n                        <button>Redeem Ticket</button>\n                      </Link>\n                    </div>\n                  </Link>\n                  <div className=\"event-media\">\n                    <img src={imgUri} alt={ticket.name} />\n                  </div>\n                </div>\n              </React.Fragment>\n            );\n          })\n        ) : (\n          <p>No tickets yet!</p>\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default UserTickets;\n","import { useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport NavBar from \"../components/NavBar\";\nimport QRcode from \"qrcode.react\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport { ethers } from \"ethers\";\nimport TicketABI from \"../assets/TicketABI.json\";\nimport EventABI from \"../assets/EventABI.json\";\nimport \"../styles/qr.scss\";\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst UserRedeem = () => {\n  const { id: ticketId } = useParams<{ id: string }>();\n  const navigate = useNavigate();\n  const [qr, setQr] = useState(\"\");\n  const handleChange = (event: any) => {\n    setQr(event.target.value);\n  };\n  const { account, library, chainId } = useWeb3React();\n  var ticketContract = new ethers.Contract(\n    process.env.REACT_APP_TICKET_ADDRESS!,\n    TicketABI,\n    library\n  );\n\n  const sign = async () => {\n    console.log(ticketId);\n    const domain = {\n      name: \"Tiny Tix\",\n      version: \"1\",\n      chainId: chainId,\n      verifyingContract: process.env.REACT_APP_TICKET_ADDRESS!,\n    };\n\n    // The named list of all type definitions\n    const types = {\n      Event: [\n        { name: \"Name\", type: \"string\" },\n        { name: \"Address\", type: \"address\" },\n      ],\n      Ticket: [\n        { name: \"Event\", type: \"Event\" },\n        { name: \"Owner\", type: \"address\" },\n        { name: \"ID\", type: \"uint256\" },\n      ],\n    };\n    const owner = await ticketContract.ownerOf(ticketId);\n    // need to be the owner of the ticket\n    if (owner !== account) {\n      console.log(\"not owner\");\n      return;\n    }\n    const eventAddress = await ticketContract.eventAddress(ticketId);\n    const eventContract = new ethers.Contract(eventAddress, EventABI, library);\n    const eventName = await eventContract.name();\n\n    // NEED to get the data to sign\n    const value = {\n      Event: {\n        Name: eventName,\n        Address: eventAddress,\n      },\n      Owner: account,\n      ID: ticketId,\n    };\n    const signer = await library.getSigner();\n    const signedMessage = await signer._signTypedData(domain, types, value);\n    setQr(\n      JSON.stringify({\n        domain: domain,\n        types: types,\n        value: value,\n        signedMessage: signedMessage,\n      })\n    );\n  };\n\n  return (\n    <>\n      <main className=\"qr\">\n        <span className=\"close\" onClick={() => navigate(-1)}></span>\n        <div>\n          <div>\n            {qr ? (\n              <QRcode id=\"myqr\" value={qr} size={320} includeMargin={true} />\n            ) : (\n              <button onClick={sign}>Click to redeem</button>\n            )}\n          </div>\n          {/* <button onClick={verify}>Verify</button> */}\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default UserRedeem;\n","import { Link } from \"react-router-dom\";\nimport { ethers } from \"ethers\";\nimport NavBar from \"../components/NavBar\";\nimport { Event } from \"./Explore\";\nimport { tickets } from \"./EventMint\";\nimport { EventDetail } from \"./Explore\";\n\nimport eventImage from \"../assets/placeholders/event-image.jpeg\";\nimport \"../styles/host.scss\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport api from \"../api\";\nimport { useWeb3React } from \"@web3-react/core\";\nimport EventABI from \"../assets/EventABI.json\";\n\nconst Host = () => {\n  const { library, account } = useWeb3React();\n  const [events, setEvents] = useState<(Event | null)[]>([]);\n  const [eventData, setEventData] = useState<EventDetail[]>([]);\n\n  useEffect(() => {\n    const apiCall = async () => {\n      const { data } = await api.post(\"/event/list\", {});\n      setEventData(data.events);\n    };\n    apiCall();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    const loadData = async () => {\n      setEvents(\n        await Promise.all(\n          eventData.map(async (eventContract) => {\n            const event: Event | null = await loadContract(\n              eventContract.address\n            );\n\n            return event;\n          })\n        )\n      );\n    };\n\n    loadData();\n  }, [eventData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const loadContract = async (address: string): Promise<Event | null> => {\n    const contract = new ethers.Contract(address, EventABI, library);\n    const name = await contract.name();\n    const owner = await contract.owner();\n    const metadata = await contract.metadata();\n    var metadataUri = metadata;\n\n    if (metadata.startsWith(\"ipfs://\")) {\n      metadataUri = `https://ipfs.io/ipfs/${metadata.split(\"/\").pop()}`;\n    }\n\n    try {\n      const { data } = await axios.get(metadataUri);\n      var imageUri = data.image.url.ORIGINAL;\n\n      if (imageUri.startsWith(\"ipfs://\")) {\n        imageUri = `https://ipfs.io/ipfs/${imageUri.split(\"/\").pop()}`;\n      }\n\n      const description = data.description;\n      const attributes = data.attributes;\n      const venue = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/venue\"\n      ).value;\n      const city = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/city\"\n      ).value;\n      const time = attributes.find(\n        (element: { key: string; value: string }) => element.key === \"/time\"\n      ).value;\n\n      return {\n        address: address,\n        name: name,\n        description: description,\n        owner: owner,\n        metadata: metadata,\n        imageUrl: imageUri,\n        venue: venue,\n        city: city,\n        time: time,\n      };\n    } catch (error) {\n      return null;\n    }\n  };\n\n  return (\n    <>\n      <NavBar />\n      <main className=\"host\">\n        <div className=\"host-bar\">\n          <h1>Your events</h1>\n          <Link to=\"/event/new\">\n            <button>Create Event</button>\n          </Link>\n        </div>\n        {events.length < 1 ? (\n          <p>Loading events...</p>\n        ) : (\n          events\n            .filter((event) => {\n              return event !== null && event.owner === account;\n            })\n            .map((event, key) => {\n              return (\n                <Link to={`/event/${event!.address}`} key={key}>\n                  <div className=\"event-hero\">\n                    <div className=\"event-description\">\n                      <h1>{event!.name}</h1>\n                      <p className=\"description\">{event!.description}</p>\n                      <div>\n                        <Link to={`/event/${event!.address}/mint`}>\n                          <button>Mint Tickets</button>\n                        </Link>\n                        <Link to={`/event/${event!.address}/redeem`}>\n                          <button style={{ marginLeft: \"20px\" }}>\n                            Verify Tickets\n                          </button>\n                        </Link>\n                      </div>\n                    </div>\n                    <img src={event!.imageUrl} alt={event!.name} />\n                  </div>\n                </Link>\n              );\n            })\n        )}\n      </main>\n    </>\n  );\n};\n\nexport default Host;\n","import { Route, BrowserRouter, Routes } from \"react-router-dom\";\nimport Home from \"./routes/Home\";\nimport Explore from \"./routes/Explore\";\n\nimport EventCreate from \"./routes/EventCreate\";\nimport EventDetail from \"./routes/EventDetail\";\nimport EventMint from \"./routes/EventMint\";\nimport TicketList from \"./routes/TicketList\";\nimport Redeem from \"./routes/Redeem\";\nimport UserTickets from \"./routes/UserTickets\";\nimport UserRedeem from \"./components/UserRedeem\";\nimport Host from \"./routes/Host\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/explore\" element={<Explore />} />\n        <Route path=\"/event/:address\" element={<EventDetail />} />\n\n        <Route path=\"/event/:address/tickets\" element={<TicketList />} />\n        <Route path=\"/event/:address/redeem\" element={<Redeem />} />\n        <Route path=\"/event/:address/mint\" element={<EventMint />} />\n        <Route path=\"/event/new\" element={<EventCreate />} />\n        <Route path=\"/host\" element={<Host />} />\n        <Route path=\"/wallet\" element={<UserTickets />} />\n        <Route path=\"/user/redeem/:id\" element={<UserRedeem />} />\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { Blockchain } from \"./types\";\n\nconst initialState: Blockchain = {\n  loading: false,\n  account: null,\n  errorMsg: \"\",\n};\n\nexport const blockchainSlice = createSlice({\n  name: \"blockchain\",\n  initialState,\n  reducers: {\n    connectRequest: (state) => {\n      state.loading = true;\n    },\n    connectSuccess: (state, action) => {\n      state.loading = false;\n      state.account = action.payload.account;\n      state.smartContract = action.payload.smartContract;\n    },\n    connectFailed: (state, action) => {\n      state.loading = false;\n      state.errorMsg = action.payload;\n    },\n    updateAccount: (state, action) => {\n      state.account = action.payload.account;\n    },\n  },\n});\n\nexport const { connectRequest, connectSuccess, connectFailed, updateAccount } =\n  blockchainSlice.actions;\n\nexport default blockchainSlice.reducer;\n","// import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\n// import thunk from \"redux-thunk\";\n// import dataReducer from \"./data/dataReducer\";\n\n// const rootReducer = combineReducers({\n//   // blockchain: blockchainReducer,\n//   data: dataReducer,\n// });\n\n// const middleware = [thunk];\n// const composeEnhancers = compose(applyMiddleware(...middleware));\n\n// const configureStore = () => {\n//   return createStore(rootReducer, composeEnhancers);\n// };\n\n// const store = configureStore();\n\n// export default store;\n\nimport { configureStore } from \"@reduxjs/toolkit\";\n\nimport blockchainReducer from \"./blockchainSlice\";\n\nconst store = configureStore({\n  reducer: {\n    blockchain: blockchainReducer,\n  },\n});\n\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider as ReduxProvider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"the-new-css-reset/css/reset.css\";\nimport \"./styles/main.scss\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport {\n  ExternalProvider,\n  JsonRpcFetchFunc,\n  Web3Provider,\n} from \"@ethersproject/providers\";\nimport { ConnectorProvider } from \"./hooks/useConnector\";\nimport { MoralisProvider } from \"react-moralis\";\n\nconst getLibrary = (provider: ExternalProvider | JsonRpcFetchFunc) => {\n  const library = new Web3Provider(provider, \"any\");\n  library.pollingInterval = 15000;\n  return library;\n};\n\nReactDOM.render(\n  <Web3ReactProvider getLibrary={getLibrary}>\n    <ConnectorProvider>\n      <MoralisProvider\n        appId=\"Lha1izn3kc9AdoBp4FfI6ruxZdDZ9iIkIwmFxsgX\"\n        serverUrl=\"https://pbr26iwsgfom.usemoralis.com:2053/server\"\n      >\n        <ReduxProvider store={store}>\n          <App />\n        </ReduxProvider>\n      </MoralisProvider>\n    </ConnectorProvider>\n  </Web3ReactProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function to log results (for example: reportWebVitals(console.log)) or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}